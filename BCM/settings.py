"""
Django settings for BCM project.

Generated by 'django-admin startproject' using Django 1.11.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

environment_vars_file = 'environment_variables.txt'
if os.path.exists(environment_vars_file):
    with open(environment_vars_file) as f:
        for line in f:
            if line.startswith('#'):
                continue
            split = [x.strip() for x in line.split('=')]
            if len(split) == 2:
                variable, value = split
            else:
                continue
            os.environ.setdefault(variable, value)

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = '4_d*(2tys-5r-y3uksg3a!n9fw%qwb9%8+k^_s*e#2p!zkkp8g'
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', '4_d*(2tys-5r-y3uksg3a!n9fw%qwb9%8+k^_s*e#2p!zkkp8g')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG      = bool(os.environ.get('DJANGO_DEBUG', False))

ALLOWED_HOSTS = os.environ.get('DJANGO_ALLOWED_HOSTS', ['10.16.3.109', '127.0.0.1', 'localhost'])
if isinstance(ALLOWED_HOSTS, str):
    ALLOWED_HOSTS = ALLOWED_HOSTS.split('|')

# print(ALLOWED_HOSTS, DEBUG)

# CSRF_COOKIE_SECURE = True  # only with SSL
CSRF_COOKIE_SECURE = False

X_FRAME_OPTIONS = 'DENY'


# Application definition

INSTALLED_APPS = [
    'BMB_Registration',
    'BMB_Registration.templatetags',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'crispy_forms',
    'captcha',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'BCM.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            # Put strings here, like "/home/html/django_templates" or "C:/www/django/templates".
            # Always use forward slashes, even on Windows.
            # Don't forget to use absolute paths, not relative paths.

            'django.contrib.auth.context_processors.auth',
            'django.template.context_processors.debug',
            'django.template.context_processors.i18n',
            'django.template.context_processors.media',
            'django.template.context_processors.static',
            'django.template.context_processors.tz',
            'django.contrib.messages.context_processors.messages',
            'django.template.context_processors.request'


            '/Users/Danny/Documents/Python/BCM/BMB_Registration/templates/',
            os.path.join(BASE_DIR, 'BMB_Registration/templates/'),
            os.path.join(BASE_DIR, 'BMB_Registration/templates/admin/'),
            os.path.join(BASE_DIR, 'templates'),
            os.path.abspath('../BMB_Registration/templates/'),
            os.path.abspath('./BMB_Registration/templates/admin/'),

        ],

        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.static',
            ],
        },
    },
]



WSGI_APPLICATION = 'BCM.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 6
        }
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/


# STATIC_URL = os.path.abspath(os.path.join(BASE_DIR, 'static/'))
# STATIC_URL = os.path.abspath('/static/')

# BASE_URL = '/bmbretreat'
BASE_URL = '/'
if BASE_URL != '/':
    USE_X_FORWARDED_HOST = True
    FORCE_SCRIPT_NAME = BASE_URL

# MEDIA_URL = '/media/'
MEDIA_URL = os.path.join(BASE_URL, 'media/')
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

STATIC_URL = os.path.join(BASE_URL, 'static/')
# STATIC_ROOT = os.path.abspath('./static/')

# print(MEDIA_URL, STATIC_URL)

if not DEBUG:
    # note that in production via uWSGI actually have to have STATIC_ROOT
    # and NOT STATICFILES_DIRS

    STATIC_ROOT = os.path.abspath('./static/')
    # STATICFILES_DIRS = [
    #     os.path.join(BASE_DIR, "static"),
    #     os.path.join(BASE_DIR, "static", "retreatpictures"),
    # ]
else:
    STATIC_ROOT = os.path.abspath('.')
    STATICFILES_DIRS = [
        os.path.join(BASE_DIR, "static"),
        os.path.abspath(os.path.join(BASE_DIR, "retreatpictures")),
        # os.path.join(BASE_DIR, 'BMB_Registration/static/admin/css/'),
        # os.path.join(BASE_DIR, 'BMB_Registration/static/admin/js/'),
    ]


# STATIC_DIRS = [os.path.join(BASE_DIR, 'BMB_Registration/static/admin/css/'),
#                # os.path.join(BASE_DIR, 'static')
# ]


PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
]

CRISPY_TEMPLATE_PACK = 'bootstrap3'

from django.contrib.messages import constants as messages
MESSAGE_TAGS = {
    messages.ERROR: 'danger'
}

# EMAIL_BACKEND = os.environ.get('DJANGO_EMAIL_BACKEND', 'django.core.mail.backends.console.EmailBackend')
# DEFAULT_FROM_EMAIL = os.environ.get('DJANGO_DEFAULT_FROM_EMAIL', 'django.core.mail.backends.console.EmailBackend')
# EMAIL_HOST  = os.environ.get('DJANGO_EMAIL_HOST', None)
# EMAIL_HOST_USER  = os.environ.get('DJANGO_EMAIL_USER', None)
# EMAIL_HOST_PASSWORD  = os.environ.get('DJANGO_EMAIL_PASSWORD', None)
# EMAIL_HOST_UseTLS  = bool(os.environ.get('DJANGO_EMAIL_UseTLS', False))
# EMAIL_USE_TLS  = bool(os.environ.get('DJANGO_EMAIL_UseTLS', False))
# EMAIL_PORT= os.environ.get('DJANGO_EMAIL_PORT', None)

EMAIL_BACKEND=os.environ.get('DJANGO_EMAIL_BACKEND', 'django.core.mail.backends.console.EmailBackend')
EMAIL_HOST=os.environ.get('DJANGO_EMAIL_HOST', 'django.core.mail.backends.console.EmailBackend')
EMAIL_PORT=os.environ.get('DJANGO_EMAIL_PORT')
EMAIL_HOST_USER=os.environ.get('DJANGO_EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD=os.environ.get('DJANGO_EMAIL_HOST_PASSWORD')
EMAIL_USE_TLS=bool(os.environ.get('DJANGO_EMAIL_BACKEND'))

# print(EMAIL_BACKEND, EMAIL_HOST, EMAIL_PORT)

# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'  # During development only
# DEFAULT_FROM_EMAIL = 'TestSite Team <noreply@example.com>'  # fix this
DEFAULT_FROM_EMAIL = EMAIL_HOST


CAPTCHA_LETTER_ROTATON = None
CAPTCHA_NOISE_FUNCTIONS = ('captcha.helpers.noise_null', )

# FORCE_SCRIPT_NAME = '/bmbretreat'
